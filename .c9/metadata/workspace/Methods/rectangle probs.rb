{"filter":false,"title":"rectangle probs.rb","tooltip":"/Methods/rectangle probs.rb","undoManager":{"mark":51,"position":51,"stack":[[{"start":{"row":0,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["# Write a function, `rec_intersection(rect1, rect2)` and returns the","# intersection of the two.","#","# Rectangles are represented as a pair of coordinate-pairs: the","# bottom-left and top-right coordinates (given in `[x, y]` notation).","#","# Hint: You can calculate the left-most x coordinate of the","# intersection by taking the maximum of the left-most x coordinate of","# each rectangle. Likewise, you can calculate the top-most y","# coordinate of the intersection by taking the minimum of the top most","# y coordinate of each rectangle.","#","# Difficulty: 4/5","","","def rec_intersection(rect1, rect2)","  x_min = [rect1[0][0], rect2[0][0]].max","  x_max = [rect1[1][0], rect2[1][0]].min","","  y_min = [rect1[0][1], rect2[0][1]].max","  y_max = [rect1[1][1], rect2[1][1]].min","","  return nil if ((x_max < x_min) || (y_max < y_min))","  return [[x_min, y_min], [x_max, y_max]]","end","",""],"id":2}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":27,"column":52},"end":{"row":27,"column":53},"action":"insert","lines":[" "],"id":8}],[{"start":{"row":27,"column":53},"end":{"row":27,"column":54},"action":"insert","lines":["n"],"id":9}],[{"start":{"row":27,"column":54},"end":{"row":27,"column":55},"action":"insert","lines":["o"],"id":10}],[{"start":{"row":27,"column":54},"end":{"row":27,"column":55},"action":"remove","lines":["o"],"id":11}],[{"start":{"row":27,"column":53},"end":{"row":27,"column":54},"action":"remove","lines":["n"],"id":12}],[{"start":{"row":27,"column":53},"end":{"row":27,"column":54},"action":"insert","lines":["#"],"id":13}],[{"start":{"row":27,"column":54},"end":{"row":27,"column":55},"action":"insert","lines":[" "],"id":14}],[{"start":{"row":27,"column":55},"end":{"row":27,"column":56},"action":"insert","lines":["n"],"id":15}],[{"start":{"row":27,"column":56},"end":{"row":27,"column":57},"action":"insert","lines":["o"],"id":16}],[{"start":{"row":27,"column":57},"end":{"row":27,"column":58},"action":"insert","lines":[" "],"id":17}],[{"start":{"row":27,"column":58},"end":{"row":27,"column":59},"action":"insert","lines":["o"],"id":18}],[{"start":{"row":27,"column":59},"end":{"row":27,"column":60},"action":"insert","lines":["v"],"id":19}],[{"start":{"row":27,"column":60},"end":{"row":27,"column":61},"action":"insert","lines":["e"],"id":20}],[{"start":{"row":27,"column":61},"end":{"row":27,"column":62},"action":"insert","lines":["r"],"id":21}],[{"start":{"row":27,"column":62},"end":{"row":27,"column":63},"action":"insert","lines":["l"],"id":22}],[{"start":{"row":27,"column":63},"end":{"row":27,"column":64},"action":"insert","lines":["a"],"id":23}],[{"start":{"row":27,"column":64},"end":{"row":27,"column":65},"action":"insert","lines":["p"],"id":24}],[{"start":{"row":27,"column":65},"end":{"row":27,"column":66},"action":"insert","lines":["s"],"id":25}],[{"start":{"row":27,"column":65},"end":{"row":27,"column":66},"action":"remove","lines":["s"],"id":26}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":27}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":28}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":29}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":30}],[{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":31}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":32}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":33}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":34}],[{"start":{"row":0,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["#find area of a rectangle with given coordinates","","","def area(arr)","  ","  x_values = []","  y_values = []","  arr.each do |xy|","    x_values << xy.first","    y_values << xy.last","  end","  ","  xmin = x_values.min","  xmax = x_values.max","  ","  ymin = y_values.min","  ymax = y_values.max","  ","  area = (ymax - ymin) * (xmax - xmin)","  ","  area","end","","area([[0, 4], [0, 0], [6, 0],[6, 4]])","",""],"id":35}],[{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["",""],"id":40}],[{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["",""],"id":41}],[{"start":{"row":47,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["",""],"id":42}],[{"start":{"row":46,"column":0},"end":{"row":47,"column":0},"action":"remove","lines":["",""],"id":43}],[{"start":{"row":45,"column":0},"end":{"row":46,"column":0},"action":"remove","lines":["",""],"id":44}],[{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["",""],"id":45}],[{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"remove","lines":["",""],"id":46}],[{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"remove","lines":["",""],"id":47}],[{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["",""],"id":48}],[{"start":{"row":53,"column":3},"end":{"row":54,"column":0},"action":"insert","lines":["",""],"id":49}],[{"start":{"row":54,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["",""],"id":50}],[{"start":{"row":55,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["",""],"id":51}],[{"start":{"row":56,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["def area_common(rect1, rect2)","  ","  xmin = [rect1[0][0], rect2[0][0]].max","  xmax = [rect1[1][0], rect2[1][0]].min","  ","  ymin = [rect1[0][1], rect2[0][1]].max","  ymax = [rect1[1][1], rect2[1][1]].min","  ","  return \"no overlap\" if (xmax < xmin) || (ymax < ymin)","  ","  area = (xmax-xmin) * (ymax-ymin)","  ","  area","end","","area_common([[0, 0], [3, 2]], [[1, 1], [4, 3]])",""],"id":52}],[{"start":{"row":1,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["def RectangleArea(strArr)","    ","    coordinates = get_subarrays(strArr)","    x_values = []","    y_values = []","    ","    #x first","    i = 0","    while i < coordinates.length","        x_values << coordinates[i][0]","        i += 1","    end","    "," ","    j = 0","    while j < coordinates.length","        y_values << coordinates[j][1]","        j += 1","    end","    ","    p y_values","    ","    p x_values.max","    x_length = x_values.max - x_values.min","    y_length = y_values.max - y_values.min","    p x_length","    x_length * y_length","    #need the min x and max x","    # need the min y and max y","    #with subtraction get y and x lengths and multiply","    ","         ","end","","","#get subarrays of nums","#\"(1 1)\",\"(1 3)\",\"(3 1)\",\"(3 3)\"","","def get_subarrays(arr)","    ","    #delete all parenthases","    arr.map!{|str| str.delete(\"(\")} #\"3 1\"","    arr.map!{|str| str.delete(\")\")}","    arr.map! do |subarray|","        subarray.split(\" \").map!{|string| string.to_i}","    end","    ","    return arr","","end","","p get_subarrays([\"(1 1)\",\"(1 3)\",\"(3 1)\",\"(3 3)\"])  ","p RectangleArea([\"(1 1)\",\"(1 3)\",\"(3 1)\",\"(3 3)\"])","",""],"id":53}],[{"start":{"row":100,"column":40},"end":{"row":100,"column":41},"action":"insert","lines":[" "],"id":54}],[{"start":{"row":99,"column":40},"end":{"row":99,"column":41},"action":"insert","lines":[" "],"id":55}],[{"start":{"row":99,"column":41},"end":{"row":99,"column":42},"action":"insert","lines":["x"],"id":56}],[{"start":{"row":99,"column":41},"end":{"row":99,"column":42},"action":"remove","lines":["x"],"id":57}]]},"ace":{"folds":[],"scrolltop":2574,"scrollleft":0,"selection":{"start":{"row":99,"column":41},"end":{"row":99,"column":41},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1495958357558,"hash":"edffce0aa4f7894e7e8403b419ca2dc6e21c84a3"}